// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: build/stack/starlark/info/v1beta1/starlark_info.proto

package v1beta1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GlobalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc    string       `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Values []*ValueInfo `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GlobalInfo) Reset() {
	*x = GlobalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalInfo) ProtoMessage() {}

func (x *GlobalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalInfo.ProtoReflect.Descriptor instead.
func (*GlobalInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{0}
}

func (x *GlobalInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *GlobalInfo) GetValues() []*ValueInfo {
	if x != nil {
		return x.Values
	}
	return nil
}

type ValueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc            string              `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	String_        *StringInfo         `protobuf:"bytes,2,opt,name=string,proto3" json:"string,omitempty"`
	Type           *TypeInfo           `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Truth          *TruthInfo          `protobuf:"bytes,4,opt,name=truth,proto3" json:"truth,omitempty"`
	Hash           *HashableInfo       `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Compare        *ComparableInfo     `protobuf:"bytes,6,opt,name=compare,proto3" json:"compare,omitempty"`
	TotallyOrdered *TotallyOrderedInfo `protobuf:"bytes,7,opt,name=totally_ordered,json=totallyOrdered,proto3" json:"totally_ordered,omitempty"`
	Callable       *CallableInfo       `protobuf:"bytes,8,opt,name=callable,proto3" json:"callable,omitempty"`
	Iterable       *IterableInfo       `protobuf:"bytes,9,opt,name=iterable,proto3" json:"iterable,omitempty"`
	Sequence       *SequenceInfo       `protobuf:"bytes,10,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Index          *IndexableInfo      `protobuf:"bytes,12,opt,name=index,proto3" json:"index,omitempty"`
	Slice          *SliceableInfo      `protobuf:"bytes,13,opt,name=slice,proto3" json:"slice,omitempty"`
	SetIndex       *HasSetIndexInfo    `protobuf:"bytes,14,opt,name=set_index,json=setIndex,proto3" json:"set_index,omitempty"`
	Mapping        *MappingInfo        `protobuf:"bytes,15,opt,name=mapping,proto3" json:"mapping,omitempty"`
	SetKey         *HasSetKeyInfo      `protobuf:"bytes,16,opt,name=set_key,json=setKey,proto3" json:"set_key,omitempty"`
	Binary         *HasBinaryInfo      `protobuf:"bytes,17,opt,name=binary,proto3" json:"binary,omitempty"`
	Unary          *HasUnaryInfo       `protobuf:"bytes,18,opt,name=unary,proto3" json:"unary,omitempty"`
	SetField       *HasSetFieldInfo    `protobuf:"bytes,19,opt,name=set_field,json=setField,proto3" json:"set_field,omitempty"`
}

func (x *ValueInfo) Reset() {
	*x = ValueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueInfo) ProtoMessage() {}

func (x *ValueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueInfo.ProtoReflect.Descriptor instead.
func (*ValueInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{1}
}

func (x *ValueInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *ValueInfo) GetString_() *StringInfo {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *ValueInfo) GetType() *TypeInfo {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ValueInfo) GetTruth() *TruthInfo {
	if x != nil {
		return x.Truth
	}
	return nil
}

func (x *ValueInfo) GetHash() *HashableInfo {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ValueInfo) GetCompare() *ComparableInfo {
	if x != nil {
		return x.Compare
	}
	return nil
}

func (x *ValueInfo) GetTotallyOrdered() *TotallyOrderedInfo {
	if x != nil {
		return x.TotallyOrdered
	}
	return nil
}

func (x *ValueInfo) GetCallable() *CallableInfo {
	if x != nil {
		return x.Callable
	}
	return nil
}

func (x *ValueInfo) GetIterable() *IterableInfo {
	if x != nil {
		return x.Iterable
	}
	return nil
}

func (x *ValueInfo) GetSequence() *SequenceInfo {
	if x != nil {
		return x.Sequence
	}
	return nil
}

func (x *ValueInfo) GetIndex() *IndexableInfo {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *ValueInfo) GetSlice() *SliceableInfo {
	if x != nil {
		return x.Slice
	}
	return nil
}

func (x *ValueInfo) GetSetIndex() *HasSetIndexInfo {
	if x != nil {
		return x.SetIndex
	}
	return nil
}

func (x *ValueInfo) GetMapping() *MappingInfo {
	if x != nil {
		return x.Mapping
	}
	return nil
}

func (x *ValueInfo) GetSetKey() *HasSetKeyInfo {
	if x != nil {
		return x.SetKey
	}
	return nil
}

func (x *ValueInfo) GetBinary() *HasBinaryInfo {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *ValueInfo) GetUnary() *HasUnaryInfo {
	if x != nil {
		return x.Unary
	}
	return nil
}

func (x *ValueInfo) GetSetField() *HasSetFieldInfo {
	if x != nil {
		return x.SetField
	}
	return nil
}

type StringInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *StringInfo) Reset() {
	*x = StringInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringInfo) ProtoMessage() {}

func (x *StringInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringInfo.ProtoReflect.Descriptor instead.
func (*StringInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{2}
}

func (x *StringInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type TypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *TypeInfo) Reset() {
	*x = TypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeInfo) ProtoMessage() {}

func (x *TypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeInfo.ProtoReflect.Descriptor instead.
func (*TypeInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{3}
}

func (x *TypeInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type TruthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *TruthInfo) Reset() {
	*x = TruthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruthInfo) ProtoMessage() {}

func (x *TruthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruthInfo.ProtoReflect.Descriptor instead.
func (*TruthInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{4}
}

func (x *TruthInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type HashableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *HashableInfo) Reset() {
	*x = HashableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashableInfo) ProtoMessage() {}

func (x *HashableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashableInfo.ProtoReflect.Descriptor instead.
func (*HashableInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{5}
}

func (x *HashableInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type ComparableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *ComparableInfo) Reset() {
	*x = ComparableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparableInfo) ProtoMessage() {}

func (x *ComparableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparableInfo.ProtoReflect.Descriptor instead.
func (*ComparableInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{6}
}

func (x *ComparableInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type TotallyOrderedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *TotallyOrderedInfo) Reset() {
	*x = TotallyOrderedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotallyOrderedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotallyOrderedInfo) ProtoMessage() {}

func (x *TotallyOrderedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotallyOrderedInfo.ProtoReflect.Descriptor instead.
func (*TotallyOrderedInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{7}
}

func (x *TotallyOrderedInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type CallableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc           string               `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	PositionalArg []*PositionalArgInfo `protobuf:"bytes,2,rep,name=positional_arg,json=positionalArg,proto3" json:"positional_arg,omitempty"`
	KeywordArg    []*KeywordArgInfo    `protobuf:"bytes,3,rep,name=keyword_arg,json=keywordArg,proto3" json:"keyword_arg,omitempty"`
	ReturnValue   *ReturnValueInfo     `protobuf:"bytes,4,opt,name=return_value,json=returnValue,proto3" json:"return_value,omitempty"`
}

func (x *CallableInfo) Reset() {
	*x = CallableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallableInfo) ProtoMessage() {}

func (x *CallableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallableInfo.ProtoReflect.Descriptor instead.
func (*CallableInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{8}
}

func (x *CallableInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *CallableInfo) GetPositionalArg() []*PositionalArgInfo {
	if x != nil {
		return x.PositionalArg
	}
	return nil
}

func (x *CallableInfo) GetKeywordArg() []*KeywordArgInfo {
	if x != nil {
		return x.KeywordArg
	}
	return nil
}

func (x *CallableInfo) GetReturnValue() *ReturnValueInfo {
	if x != nil {
		return x.ReturnValue
	}
	return nil
}

type IterableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *IterableInfo) Reset() {
	*x = IterableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterableInfo) ProtoMessage() {}

func (x *IterableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterableInfo.ProtoReflect.Descriptor instead.
func (*IterableInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{9}
}

func (x *IterableInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *IterableInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SequenceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SequenceInfo) Reset() {
	*x = SequenceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequenceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceInfo) ProtoMessage() {}

func (x *SequenceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceInfo.ProtoReflect.Descriptor instead.
func (*SequenceInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{10}
}

func (x *SequenceInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *SequenceInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type IndexableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *IndexableInfo) Reset() {
	*x = IndexableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexableInfo) ProtoMessage() {}

func (x *IndexableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexableInfo.ProtoReflect.Descriptor instead.
func (*IndexableInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{11}
}

func (x *IndexableInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *IndexableInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SliceableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SliceableInfo) Reset() {
	*x = SliceableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SliceableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceableInfo) ProtoMessage() {}

func (x *SliceableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceableInfo.ProtoReflect.Descriptor instead.
func (*SliceableInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{12}
}

func (x *SliceableInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *SliceableInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type HasSetIndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *HasSetIndexInfo) Reset() {
	*x = HasSetIndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasSetIndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasSetIndexInfo) ProtoMessage() {}

func (x *HasSetIndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasSetIndexInfo.ProtoReflect.Descriptor instead.
func (*HasSetIndexInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{13}
}

func (x *HasSetIndexInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *HasSetIndexInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type MappingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc    string        `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Member []*MemberInfo `protobuf:"bytes,3,rep,name=member,proto3" json:"member,omitempty"`
}

func (x *MappingInfo) Reset() {
	*x = MappingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingInfo) ProtoMessage() {}

func (x *MappingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingInfo.ProtoReflect.Descriptor instead.
func (*MappingInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{14}
}

func (x *MappingInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *MappingInfo) GetMember() []*MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc       string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	KeyType   string `protobuf:"bytes,2,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ValueType string `protobuf:"bytes,3,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{15}
}

func (x *MemberInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *MemberInfo) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *MemberInfo) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

type HasSetKeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc       string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	KeyType   string `protobuf:"bytes,2,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ValueType string `protobuf:"bytes,3,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
}

func (x *HasSetKeyInfo) Reset() {
	*x = HasSetKeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasSetKeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasSetKeyInfo) ProtoMessage() {}

func (x *HasSetKeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasSetKeyInfo.ProtoReflect.Descriptor instead.
func (*HasSetKeyInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{16}
}

func (x *HasSetKeyInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *HasSetKeyInfo) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *HasSetKeyInfo) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

type HasBinaryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *HasBinaryInfo) Reset() {
	*x = HasBinaryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasBinaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasBinaryInfo) ProtoMessage() {}

func (x *HasBinaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasBinaryInfo.ProtoReflect.Descriptor instead.
func (*HasBinaryInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{17}
}

func (x *HasBinaryInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type HasUnaryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *HasUnaryInfo) Reset() {
	*x = HasUnaryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasUnaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasUnaryInfo) ProtoMessage() {}

func (x *HasUnaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasUnaryInfo.ProtoReflect.Descriptor instead.
func (*HasUnaryInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{18}
}

func (x *HasUnaryInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type HasSetFieldInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *HasSetFieldInfo) Reset() {
	*x = HasSetFieldInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasSetFieldInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasSetFieldInfo) ProtoMessage() {}

func (x *HasSetFieldInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasSetFieldInfo.ProtoReflect.Descriptor instead.
func (*HasSetFieldInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{19}
}

func (x *HasSetFieldInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type PositionalArgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc      string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Position int32  `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PositionalArgInfo) Reset() {
	*x = PositionalArgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionalArgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionalArgInfo) ProtoMessage() {}

func (x *PositionalArgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionalArgInfo.ProtoReflect.Descriptor instead.
func (*PositionalArgInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{20}
}

func (x *PositionalArgInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *PositionalArgInfo) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *PositionalArgInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type KeywordArgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc          string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Mandatory    bool   `protobuf:"varint,4,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	DefaultValue string `protobuf:"bytes,5,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *KeywordArgInfo) Reset() {
	*x = KeywordArgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeywordArgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordArgInfo) ProtoMessage() {}

func (x *KeywordArgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordArgInfo.ProtoReflect.Descriptor instead.
func (*KeywordArgInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{21}
}

func (x *KeywordArgInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *KeywordArgInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeywordArgInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *KeywordArgInfo) GetMandatory() bool {
	if x != nil {
		return x.Mandatory
	}
	return false
}

func (x *KeywordArgInfo) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

type ReturnValueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReturnValueInfo) Reset() {
	*x = ReturnValueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnValueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnValueInfo) ProtoMessage() {}

func (x *ReturnValueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnValueInfo.ProtoReflect.Descriptor instead.
func (*ReturnValueInfo) Descriptor() ([]byte, []int) {
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP(), []int{22}
}

func (x *ReturnValueInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *ReturnValueInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_build_stack_starlark_info_v1beta1_starlark_info_proto protoreflect.FileDescriptor

var file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDesc = []byte{
	0x0a, 0x35, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x73, 0x74,
	0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x22, 0x64, 0x0a, 0x0a, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x44, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72,
	0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x9a, 0x0a, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63,
	0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x72, 0x75, 0x74, 0x68, 0x12, 0x43, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72,
	0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x4b, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x5e,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x6c, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x12, 0x4b,
	0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x49, 0x74, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72,
	0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x46, 0x0a,
	0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c,
	0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x73, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x61, 0x73,
	0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x48, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x49, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61,
	0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x48, 0x61, 0x73, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x55, 0x6e, 0x61, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x4f, 0x0a, 0x09,
	0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x1e, 0x0a,
	0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x1c, 0x0a,
	0x08, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x1d, 0x0a, 0x09, 0x54,
	0x72, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x20, 0x0a, 0x0c, 0x48, 0x61,
	0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x22, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63,
	0x22, 0x26, 0x0a, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0xa8, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x6c,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x5b, 0x0a, 0x0e, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x41, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x67, 0x12, 0x52, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x72, 0x67, 0x12, 0x55, 0x0a, 0x0c,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x35, 0x0a, 0x0d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x37, 0x0a,
	0x0f, 0x48, 0x61, 0x73, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2e, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x58,
	0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x19,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x53,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x20, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x55,
	0x6e, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x23, 0x0a, 0x0f, 0x48, 0x61,
	0x73, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22,
	0x55, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x72, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x4b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x41, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6c, 0x61, 0x72, 0x6b, 0x2f, 0x69,
	0x6e, 0x66, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescOnce sync.Once
	file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescData = file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDesc
)

func file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescGZIP() []byte {
	file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescOnce.Do(func() {
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescData)
	})
	return file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDescData
}

var file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_build_stack_starlark_info_v1beta1_starlark_info_proto_goTypes = []interface{}{
	(*GlobalInfo)(nil),         // 0: build.stack.starlark.info.v1beta1.GlobalInfo
	(*ValueInfo)(nil),          // 1: build.stack.starlark.info.v1beta1.ValueInfo
	(*StringInfo)(nil),         // 2: build.stack.starlark.info.v1beta1.StringInfo
	(*TypeInfo)(nil),           // 3: build.stack.starlark.info.v1beta1.TypeInfo
	(*TruthInfo)(nil),          // 4: build.stack.starlark.info.v1beta1.TruthInfo
	(*HashableInfo)(nil),       // 5: build.stack.starlark.info.v1beta1.HashableInfo
	(*ComparableInfo)(nil),     // 6: build.stack.starlark.info.v1beta1.ComparableInfo
	(*TotallyOrderedInfo)(nil), // 7: build.stack.starlark.info.v1beta1.TotallyOrderedInfo
	(*CallableInfo)(nil),       // 8: build.stack.starlark.info.v1beta1.CallableInfo
	(*IterableInfo)(nil),       // 9: build.stack.starlark.info.v1beta1.IterableInfo
	(*SequenceInfo)(nil),       // 10: build.stack.starlark.info.v1beta1.SequenceInfo
	(*IndexableInfo)(nil),      // 11: build.stack.starlark.info.v1beta1.IndexableInfo
	(*SliceableInfo)(nil),      // 12: build.stack.starlark.info.v1beta1.SliceableInfo
	(*HasSetIndexInfo)(nil),    // 13: build.stack.starlark.info.v1beta1.HasSetIndexInfo
	(*MappingInfo)(nil),        // 14: build.stack.starlark.info.v1beta1.MappingInfo
	(*MemberInfo)(nil),         // 15: build.stack.starlark.info.v1beta1.MemberInfo
	(*HasSetKeyInfo)(nil),      // 16: build.stack.starlark.info.v1beta1.HasSetKeyInfo
	(*HasBinaryInfo)(nil),      // 17: build.stack.starlark.info.v1beta1.HasBinaryInfo
	(*HasUnaryInfo)(nil),       // 18: build.stack.starlark.info.v1beta1.HasUnaryInfo
	(*HasSetFieldInfo)(nil),    // 19: build.stack.starlark.info.v1beta1.HasSetFieldInfo
	(*PositionalArgInfo)(nil),  // 20: build.stack.starlark.info.v1beta1.PositionalArgInfo
	(*KeywordArgInfo)(nil),     // 21: build.stack.starlark.info.v1beta1.KeywordArgInfo
	(*ReturnValueInfo)(nil),    // 22: build.stack.starlark.info.v1beta1.ReturnValueInfo
}
var file_build_stack_starlark_info_v1beta1_starlark_info_proto_depIdxs = []int32{
	1,  // 0: build.stack.starlark.info.v1beta1.GlobalInfo.values:type_name -> build.stack.starlark.info.v1beta1.ValueInfo
	2,  // 1: build.stack.starlark.info.v1beta1.ValueInfo.string:type_name -> build.stack.starlark.info.v1beta1.StringInfo
	3,  // 2: build.stack.starlark.info.v1beta1.ValueInfo.type:type_name -> build.stack.starlark.info.v1beta1.TypeInfo
	4,  // 3: build.stack.starlark.info.v1beta1.ValueInfo.truth:type_name -> build.stack.starlark.info.v1beta1.TruthInfo
	5,  // 4: build.stack.starlark.info.v1beta1.ValueInfo.hash:type_name -> build.stack.starlark.info.v1beta1.HashableInfo
	6,  // 5: build.stack.starlark.info.v1beta1.ValueInfo.compare:type_name -> build.stack.starlark.info.v1beta1.ComparableInfo
	7,  // 6: build.stack.starlark.info.v1beta1.ValueInfo.totally_ordered:type_name -> build.stack.starlark.info.v1beta1.TotallyOrderedInfo
	8,  // 7: build.stack.starlark.info.v1beta1.ValueInfo.callable:type_name -> build.stack.starlark.info.v1beta1.CallableInfo
	9,  // 8: build.stack.starlark.info.v1beta1.ValueInfo.iterable:type_name -> build.stack.starlark.info.v1beta1.IterableInfo
	10, // 9: build.stack.starlark.info.v1beta1.ValueInfo.sequence:type_name -> build.stack.starlark.info.v1beta1.SequenceInfo
	11, // 10: build.stack.starlark.info.v1beta1.ValueInfo.index:type_name -> build.stack.starlark.info.v1beta1.IndexableInfo
	12, // 11: build.stack.starlark.info.v1beta1.ValueInfo.slice:type_name -> build.stack.starlark.info.v1beta1.SliceableInfo
	13, // 12: build.stack.starlark.info.v1beta1.ValueInfo.set_index:type_name -> build.stack.starlark.info.v1beta1.HasSetIndexInfo
	14, // 13: build.stack.starlark.info.v1beta1.ValueInfo.mapping:type_name -> build.stack.starlark.info.v1beta1.MappingInfo
	16, // 14: build.stack.starlark.info.v1beta1.ValueInfo.set_key:type_name -> build.stack.starlark.info.v1beta1.HasSetKeyInfo
	17, // 15: build.stack.starlark.info.v1beta1.ValueInfo.binary:type_name -> build.stack.starlark.info.v1beta1.HasBinaryInfo
	18, // 16: build.stack.starlark.info.v1beta1.ValueInfo.unary:type_name -> build.stack.starlark.info.v1beta1.HasUnaryInfo
	19, // 17: build.stack.starlark.info.v1beta1.ValueInfo.set_field:type_name -> build.stack.starlark.info.v1beta1.HasSetFieldInfo
	20, // 18: build.stack.starlark.info.v1beta1.CallableInfo.positional_arg:type_name -> build.stack.starlark.info.v1beta1.PositionalArgInfo
	21, // 19: build.stack.starlark.info.v1beta1.CallableInfo.keyword_arg:type_name -> build.stack.starlark.info.v1beta1.KeywordArgInfo
	22, // 20: build.stack.starlark.info.v1beta1.CallableInfo.return_value:type_name -> build.stack.starlark.info.v1beta1.ReturnValueInfo
	15, // 21: build.stack.starlark.info.v1beta1.MappingInfo.member:type_name -> build.stack.starlark.info.v1beta1.MemberInfo
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_build_stack_starlark_info_v1beta1_starlark_info_proto_init() }
func file_build_stack_starlark_info_v1beta1_starlark_info_proto_init() {
	if File_build_stack_starlark_info_v1beta1_starlark_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComparableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotallyOrderedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SequenceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SliceableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasSetIndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasSetKeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasBinaryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasUnaryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasSetFieldInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionalArgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeywordArgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnValueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_build_stack_starlark_info_v1beta1_starlark_info_proto_goTypes,
		DependencyIndexes: file_build_stack_starlark_info_v1beta1_starlark_info_proto_depIdxs,
		MessageInfos:      file_build_stack_starlark_info_v1beta1_starlark_info_proto_msgTypes,
	}.Build()
	File_build_stack_starlark_info_v1beta1_starlark_info_proto = out.File
	file_build_stack_starlark_info_v1beta1_starlark_info_proto_rawDesc = nil
	file_build_stack_starlark_info_v1beta1_starlark_info_proto_goTypes = nil
	file_build_stack_starlark_info_v1beta1_starlark_info_proto_depIdxs = nil
}
